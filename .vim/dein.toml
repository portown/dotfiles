# Core

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'vim-denops/denops.vim'
if = 'has("nvim") || v:version >= 900'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

# ddu

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = 'source ~/.vim/rc/plugins/ddu.vim'
hook_source = 'source ~/.vim/rc/plugins/ddu_on_source.vim'

## ddu-ui

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'

## ddu-sources

[[plugins]]
repo = 'Shougo/ddu-source-file'
depends = ['ddu-kind-file']

[[plugins]]
repo = 'Shougo/ddu-source-action'

[[plugins]]
repo = 'shun/ddu-source-buffer'

[[plugins]]
repo = 'Shougo/ddu-source-vim'

[[plugins]]
repo = 'matsui54/ddu-source-help'

## ddu-kind

[[plugins]]
repo = 'Shougo/ddu-kind-file'

## ddu-filter

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-filter-sorter_alpha'

# Others

[[plugins]]
repo = 'itchyny/landscape.vim'
merged = 0

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/rc/plugins/lightline.vim'
if = '!has("nvim")'

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
hook_source = 'source ~/.vim/rc/plugins/lualine.lua'
if = 'has("nvim")'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup = 1
    let g:indent_guides_start_level = 2
    let g:indent_guides_guide_size = 1
    let g:indent_guides_exclude_filetypes = ['help', 'unite']
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    let g:gitgutter_realtime = 0
    let g:gitgutter_eager = 0
'''

[[plugins]]
repo = 'thinca/vim-localrc'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'

[[plugins]]
repo = 'thinca/vim-fontzoom'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_source = 'source ~/.vim/rc/plugins/defx.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

# Textobjs

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'
#depends = 'kana/vim-textobj-user'
#on_map = [['ox', '<Plug>']]
hook_add = '''
    " for lazy loading
    let g:textobj_entire_no_default_key_mappings = 1

    omap ae <Plug>(textobj-entire-a)
    omap ie <Plug>(textobj-entire-i)
    xmap ae <Plug>(textobj-entire-a)
    xmap ie <Plug>(textobj-entire-i)
'''

[[plugins]]
repo = 'kana/vim-textobj-line'
#depends = 'kana/vim-textobj-user'
#on_map = [['ox', '<Plug>']]
hook_add = '''
    " for lazy loading
    let g:textobj_line_no_default_key_mappings = 1

    omap al <Plug>(textobj-line-a)
    omap il <Plug>(textobj-line-i)
    xmap al <Plug>(textobj-line-a)
    xmap il <Plug>(textobj-line-i)
'''

[[plugins]]
repo = 'thinca/vim-textobj-between'
#depends = 'kana/vim-textobj-user'
#on_map = [['ox', '<Plug>']]
#on_source = 'vim-operator-surround'
hook_add = '''
    " for lazy loading
    let g:textobj_between_no_default_key_mappings = 1

    omap af <Plug>(textobj-between-a)
    omap if <Plug>(textobj-between-i)
    xmap af <Plug>(textobj-between-a)
    xmap if <Plug>(textobj-between-i)
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
#depends = 'kana/vim-textobj-user'
#on_map = [['ox', '<Plug>']]
#on_source = 'vim-operator-surround'
hook_add = '''
    let g:textobj#multiblock#default_blocks = []
    let g:textobj_multiblock_blocks = [
                \   ['"', '"', 1],
                \   ["'", "'", 1],
                \   ["`", "`", 1],
                \   ["(", ")"],
                \   ["{", "}"],
                \   ["[", "]"],
                \   ["<", ">"],
                \ ]

    let g:textobj#multiblock#enable_block_in_cursor = 1

    omap ab <Plug>(textobj-multiblock-a)
    omap ib <Plug>(textobj-multiblock-i)
    xmap ab <Plug>(textobj-multiblock-a)
    xmap ib <Plug>(textobj-multiblock-i)
'''

[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
#depends = 'kana/vim-textobj-user'
#on_map = [['ox', '<Plug>']]
hook_add = '''
    " for lazy loading
    let g:textobj_ruby_no_default_key_mappings = 1

    function! s:vim_textobj_ruby_settings()
        omap <buffer> ar <Plug>(textobj-ruby-a)
        omap <buffer> ir <Plug>(textobj-ruby-i)
        xmap <buffer> ar <Plug>(textobj-ruby-a)
        xmap <buffer> ir <Plug>(textobj-ruby-i)
    endfunction
    autocmd Portown FileType ruby call s:vim_textobj_ruby_settings()
'''

# Operators

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
#depends = 'kana/vim-operator-user'
#on_map = '<Plug>'
hook_add = '''
    nmap <silent>_ <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
#depends = 'kana/vim-operator-user'
#on_map = '<Plug>'
hook_add = '''
    nmap <silent>ys <Plug>(operator-surround-append)
    nmap <silent>csb <Plug>(operator-surround-replace)<Plug>(textobj-multiblock-a)
    nmap <silent>csc <Plug>(operator-surround-replace)<Plug>(textobj-between-a)
    nmap <silent>dsb <Plug>(operator-surround-delete)<Plug>(textobj-multiblock-a)
    nmap <silent>dsc <Plug>(operator-surround-delete)<Plug>(textobj-between-a)

    xmap <silent>s <Plug>(operator-surround-append)
'''

[[plugins]]
repo = 'osyo-manga/vim-operator-jump_side'
#depends = 'kana/vim-operator-user'
#on_map = '<Plug>'

# Completions

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
hook_source = 'source ~/.vim/rc/plugins/deoplete.vim'
